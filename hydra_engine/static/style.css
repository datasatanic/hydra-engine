.plan-node{
    list-style-type: none;
}
.item{
    display: flex;
    flex-direction: row;
    gap:5px;
}
.item>img{
    height: 24px;
    width: 24px;
}
.item>h5{
    color:var(--hydra-text)
}
.item>img[aria-expanded="false"]{
    transform: scaleY(-1);
    
}
.item>img[aria-expanded="true"]{
    transform: rotate(0.25turn);
}
.plan-node ul {
    margin: 0 0 0 .5em; /* вести линию вниз где-то с полбуквы родителя */
}
.plan-node > li:not(:only-child),
.plan-node li li {
    position: relative;
    padding: .2em 0 0 1.2em; /* отступ до текста; для раскрывающегося списка в ряде случаев (в Хроме есть баг) padding-top (.2em) лучше указывать в px */
}
.plan-node li:not(:last-child) {
    border-left: 1px solid #ccc; /* толщина, цвет и стиль (вместо сплошной пунктирная или точечная) вертикальной линии */
}
.plan-node li li:before,
.plan-node > li:not(:only-child):before { /* горизонтальная линия */
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 1.1em; /* не более отступа до текста (1.2em) */
    height: 1em; /* начинается приблизительно с половины высоты буквы (.5em + .2em) */
    border-bottom: 1px solid #ccc;
}
.plan-node li:last-child:before { /* вертикальная линия последнего пункта в каждом списке */
    width: calc(1.1em - 1px); /* для перфекционистов */
    border-left: 1px solid #ccc;
}
h1,h2,h3,h4,h5{
    margin:0;
}
.variable{
    margin: 0 30px;
}
.change_item{
    font-size: 16px;
    display: flex;
    flex-direction: row;
    gap: 5px;
    border: 0;
    margin: 0;
    padding: 0;
}
.change_item_value{
    font-size: 14px;
}
.red{
    color:red;
}
.green{
    color:green;
}
.change_container{
    width: 100%;
    padding: 10px;
    display: flex;
    gap: 40px;
}
.resource-changes-container{
    max-height: 600px;
    overflow-y: auto;
    overflow-x: auto;
    padding: 0 10px;
}
.values-change{
    border: 1px solid black !important;
    width: 80vw;
}
.old-values,.new-values{
    width: 100%;
}
.array-container{
    width: 100%;
}
.array-container::before{
    content: "[";
}
.array-container::after{
    content: "]";
}
.array-container>*:not(:last-child)::after{
    content: ",";
}
.added{
    color: green;
}
.removed{
    color: red;
}
.changed{
    color: orange;
}
.node-name{
    color:dimgray !important;
}